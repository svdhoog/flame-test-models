digraph communication_graph {
	rankdir=BT;
	size="8,5;"
	layer_0 [ color="#ff0000" label="layer 0"];
	Sender_sender_sends_mesg_start_Sender_end_Sender [ shape = rect label="Sender_sender_sends_mesg_start_Sender_end_Sender [-1]" ];
	Sender_sender_sends_mesg_start_Sender_end_Sender -> layer_0;
	layer_1 [ color="#ff0000" label="layer 1"];
	layer_1 ->Sender_sender_sends_mesg_start_Sender_end_Sender;
	Receiver_receiver_reads_mesg_start_Receiver_end_Receiver [ shape = rect label="Receiver_receiver_reads_mesg_start_Receiver_end_Receiver [1]" ];
	Receiver_receiver_reads_mesg_start_Receiver_end_Receiver -> layer_1;
	hello_message [ label = "hello" color="#00ff00" shape = parallelogram];
	hello_message_sync_start_0 [ label = "start" color="#00ff00" shape = parallelogram];
	hello_message_sync_start_0 -> hello_message [ color="#00ff00" label="hello_1"];
	{ rank=same; Sender_sender_sends_mesg_start_Sender_end_Sender; hello_message_sync_start_0; }
	hello_message_sync_end_0 [ label = "end" color="#00ff00" shape = parallelogram];
	hello_message_sync_end_0 -> hello_message_sync_start_0 [ color="#00ff00" ];
	hello_message_sync_end_0 -> Receiver_receiver_reads_mesg_start_Receiver_end_Receiver [ color="#00ff00" constraint=false ];
	hello_message_sync_start_0 -> Sender_sender_sends_mesg_start_Sender_end_Sender [ color="#00ff00", constraint=false, style=dashed ];
	{ rank=same; Receiver_receiver_reads_mesg_start_Receiver_end_Receiver; hello_message_sync_end_0; }
	Sender_sender_sends_mesg_start_Sender_end_Sender -> hello_message [ color="#00ff00" constraint=false ];
}